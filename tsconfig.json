{
  "version": "1.5.0",
  "compilerOptions": {
  	"target": "es5",
  	"module": "commonjs",
  	"declaration": false,
    "noImplicitAny": false,
    "removeComments": false,
    "noLib": false,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
  	"sourceMap": true,
    "listFiles": false,
  	"outDir": "dist"
  },
  "files": [
    "tsd_typings/tsd.d.ts",
    "custom_typings/_custom.d.ts",
    "modules/index.ts",
    "modules/preboot/client.ts",
    "modules/preboot/server.ts",
    "modules/preboot/src/client/buffer_manager.ts",
    "modules/preboot/src/client/dom.ts",
    "modules/preboot/src/client/event_manager.ts",
    "modules/preboot/src/client/log.ts",
    "modules/preboot/src/client/preboot_client.ts",
    "modules/preboot/src/client/freeze/freeze_with_spinner.ts",
    "modules/preboot/src/client/listen/listen_by_attributes.ts",
    "modules/preboot/src/client/listen/listen_by_event_bindings.ts",
    "modules/preboot/src/client/listen/listen_by_selectors.ts",
    "modules/preboot/src/client/replay/replay_after_hydrate.ts",
    "modules/preboot/src/client/replay/replay_after_rerender.ts",
    "modules/preboot/src/server/client_code_generator.ts",
    "modules/preboot/src/server/normalize.ts",
    "modules/preboot/src/server/preboot_server.ts",
    "modules/preboot/src/server/presets.ts",
    "modules/preboot/src/server/utils.ts",
    "modules/preboot/test/preboot_karma.ts",
    "modules/preboot/test/server/client_code_generator_spec.ts",
    "modules/preboot/test/server/normalize_spec.ts",
    "modules/preboot/test/server/presets_spec.ts",
    "modules/preboot/test/server/utils_spec.ts",
    "modules/preboot/test/client/buffer_manager_spec.ts",
    "modules/preboot/test/client/dom_spec.ts",
    "modules/preboot/test/client/event_manager_spec.ts",
    "modules/preboot/test/client/log_spec.ts",
    "modules/preboot/test/client/freeze/freeze_with_spinner_spec.ts",
    "modules/preboot/test/client/listen/listen_by_attributes_spec.ts",
    "modules/preboot/test/client/listen/listen_by_event_bindings_spec.ts",
    "modules/preboot/test/client/listen/listen_by_selectors_spec.ts",
    "modules/preboot/test/client/replay/replay_after_hydrate_spec.ts",
    "modules/preboot/test/client/replay/replay_after_rerender_spec.ts",
    "modules/universal/server/index.ts",
    "modules/universal/server/server.ts",
    "modules/universal/server/src/platform/dom/server_dom_renderer.ts",
    "modules/universal/server/src/platform/node.ts",
    "modules/universal/server/src/platform/node_xhr_impl.ts",
    "modules/universal/server/src/directives/server_form.ts",
    "modules/universal/server/src/http/server_http.ts",
    "modules/universal/server/src/router/server_router.ts",
    "modules/universal/server/src/helper.ts",
    "modules/universal/server/src/render.ts",
    "modules/universal/server/src/server_patch.ts",
    "modules/universal/server/src/stringifyElement.ts",
    "modules/universal/server/test/router_server_spec.ts",
    "modules/universal/client/index.ts",
    "modules/universal/client/client.ts",
    "modules/universal/client/src/ng_preload_cache.ts",
    "modules/angular2-express-engine/index.ts",
    "modules/angular2-express-engine/engine.ts",
    "examples/app/server/api.ts",
    "examples/app/server/routes.ts",
    "examples/app/server/server.ts",
    "examples/app/universal/test_page/client.ts",
    "examples/app/universal/test_page/app.ts",
    "examples/app/universal/todo/app.ts",
    "examples/app/universal/todo/client.ts",
    "examples/app/universal/todo/services/TodoStore.ts",
    "examples/app/universal/test_router/app.ts",
    "examples/app/universal/test_router/client.ts"
  ],
  "exclude": [
    "modules/angular2-express-engine/test",
    "modules/angular2-express-engine/node_modules",
    "modules/universal/server/test",
    "modules/universal/node_modules",
    "preboot/test",
    "preboot/node_modules",
    "node_modules"
  ],
   "formatCodeOptions": {
      "indentSize": 2,
      "tabSize": 2,
      "newLineCharacter": "\r\n",
      "convertTabsToSpaces": true,
      "insertSpaceAfterCommaDelimiter": true,
      "insertSpaceAfterSemicolonInForStatements": true,
      "insertSpaceBeforeAndAfterBinaryOperators": true,
      "insertSpaceAfterKeywordsInControlFlowStatements": true,
      "insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
      "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
      "placeOpenBraceOnNewLineForFunctions": false,
      "placeOpenBraceOnNewLineForControlBlocks": false
    }
}
