# Configuration file for https://circleci.com/gh/angular/universal

# Note: YAML anchors allow an object to be re-used, reducing duplication.
# The ampersand declares an alias for an object, then later the `<<: *name`
# syntax dereferences it.
# See http://blog.daemonl.com/2016/02/yaml.html
# To validate changes, use an online parser, eg.
# http://yaml-online-parser.appspot.com/

# Note that the browser docker image comes with Chrome and Firefox preinstalled. This is just
# needed for jobs that run tests without Bazel. Bazel runs tests with browsers that will be
# fetched by the Webtesting rules. Therefore for jobs that run tests with Bazel, we don't need a
# docker image with browsers pre-installed.
# **NOTE 1**: Pin to exact images using an ID (SHA). See https://circleci.com/docs/2.0/circleci-images/#using-a-docker-image-id-to-pin-an-image-to-a-fixed-version.
#             (Using the tag in not necessary when pinning by ID, but include it anyway for documentation purposes.)
# **NOTE 2**: If you change the version of the docker images, also change the `cache_key` suffix.
var_1: &docker_image cimg/node:14.20
var_2: &cache_key angular_universal-{{ checksum "yarn.lock" }}-{{ checksum "WORKSPACE" }}-node-14.20

# Workspace initially persisted by the `setup` job.
# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
# https://circleci.com/blog/deep-diving-into-circleci-workspaces/
var_5: &workspace_location .

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.0

# Executor Definitions
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors
executors:
  action-executor:
    docker:
      - image: *docker_image
    working_directory: ~/ng

# Command Definitions
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-commands
commands:
  custom_attach_workspace:
    description: Attach workspace at a predefined location
    steps:
      - attach_workspace:
          at: *workspace_location

  copy-bazel-config:
    description: Copy Bazel config
    steps:
      # Copies the Bazel config which is specifically for CircleCI to a location where Bazel picks it
      # up and merges it with the project-wide bazel configuration (tools/bazel.rc)
      # Set up the CircleCI specific bazel configuration.
      - run: sudo cp ./.circleci/bazel.rc /etc/bazel.bazelrc

jobs:
  setup:
    executor: action-executor
    steps:
      # After checkout, rebase on top of main. By default, PRs are not rebased on top of main,
      # which we want. See https://discuss.circleci.com/t/1662
      - checkout:
          post: git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge"
      - restore_cache:
          keys:
            - *cache_key
      - run: yarn install --frozen-lockfile --non-interactive
      - persist_to_workspace:
          root: *workspace_location
          paths:
            - ./*

  build:
    executor: action-executor
    resource_class: xlarge
    steps:
      - custom_attach_workspace
      - browser-tools/install-chrome
      - copy-bazel-config
      # Install rsync which is used by the integration test launcher bash script
      - run: sudo apt-get update -y && sudo apt-get install -y rsync
      - run: yarn bazel test //...
      - save_cache:
          key: *cache_key
          paths:
            - ~/.cache/yarn
            - ~/bazel_repository_cache
            - ~/bazel_disk_cache

  lint:
    executor: action-executor
    steps:
      - custom_attach_workspace
      - copy-bazel-config
      - run:
          name: Validate Commit Messages
          command: >
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
              yarn ng-dev commit-message validate-range <<pipeline.git.base_revision>> <<pipeline.git.revision>>
            else
              echo "This build is not over a PR, nothing to do."
            fi
      - run:
          name: Validate Code Formatting
          command: yarn -s ng-dev format changed <<pipeline.git.base_revision>> --check
      - run: yarn -s check-tooling-setup
      - run: yarn lint

workflows:
  version: 2
  default_workflow:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - lint:
          requires:
            - setup

general:
  branches:
    only:
      - main
      # 5.2.x, 6.0.x, etc
      - /\d+\.\d+\.x/
      # 5.x, 6.x, etc
      - /\d+\.x/
